name: ⚗️Check

on:
  push:

env:
  GH_TOKEN: ${{ secrets.WRITE_PACKAGE }}

jobs:
  # 共通処理
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: set up
        uses: actions/setup-go@v2
        with:
          go-version: ^1.19
        id: go
      - name: check out
        uses: actions/checkout@v3
      - name: Cache
        uses: actions/cache@main
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

  build:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: build
        run: go build .

  run:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: run
        run: go run .

  test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: test
        run: go test . -v

  # lint:
  #   needs: setup
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: golangci-lint
  #       uses: golangci/golangci-lint-action@v2
  #       with:
  #         version: v1.29

  image:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Get git tag(short)
        id: git-tag
        run: |
          GIT_TAG=$(git rev-parse --short HEAD)
          echo "::set-output name=git-tag::$GIT_TAG"

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@master

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.WRITE_PACKAGE }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build image for release
        uses: docker/build-push-action@v2
        with:
          context: .
          builder: ${{ steps.buildx.outputs.name }}
          target: release
          push: true
          tags: ghcr.io/kijimad/maru:${{ steps.git-tag.outputs.git-tag }},ghcr.io/kijimad/maru:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
